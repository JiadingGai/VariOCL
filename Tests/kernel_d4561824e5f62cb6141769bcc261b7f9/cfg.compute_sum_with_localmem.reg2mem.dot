digraph "CFG for 'compute_sum_with_localmem' function" {
	label="CFG for 'compute_sum_with_localmem' function";

	Node0xdf07d0 [shape=record,label="{entry.barrier:\l  %div31.reg2mem = alloca i32\l  %add21.reg2mem = alloca i32\l  %.reg2mem = alloca i32\l  %lsize.0.reg2mem = alloca i32\l  %add6.reg2mem = alloca i32\l  %i.0.reg2mem = alloca i32\l  %call1.reg2mem = alloca i32\l  %call.reg2mem = alloca i32\l  %sum13.0.reg2mem = alloca i32\l  %lsize.0.reg2mem22 = alloca i32\l  %i.0.reg2mem24 = alloca i32\l  %\"reg2mem alloca point\" = bitcast i32 0 to i32\l  call void @barrier(i32 0)\l  br label %entry\l}"];
	Node0xdf07d0 -> Node0xdf1c10;
	Node0xdf1c10 [shape=record,label="{entry:                                            \l  %call = call i32 @get_local_id(i32 0) #2\l  store i32 %call, i32* %call.reg2mem\l  %call1 = call i32 @get_local_size(i32 0) #2\l  store i32 %call1, i32* %call1.reg2mem\l  %call.reload21 = load i32* %call.reg2mem\l  %idxprom = sext i32 %call.reload21 to i64\l  %arrayidx = getelementptr inbounds [512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 %idxprom\l  store i32 0, i32* %arrayidx, align 4\l  %call.reload20 = load i32* %call.reg2mem\l  store i32 %call.reload20, i32* %i.0.reg2mem24\l  br label %for.cond\l}"];
	Node0xdf1c10 -> Node0xdf27c0;
	Node0xdf27c0 [shape=record,label="{for.cond:                                         \l  %i.0.reload25 = load i32* %i.0.reg2mem24\l  store i32 %i.0.reload25, i32* %i.0.reg2mem\l  %i.0.reload9 = load i32* %i.0.reg2mem\l  %cmp = icmp slt i32 %i.0.reload9, %n\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xdf27c0:s0 -> Node0xdf2dd0;
	Node0xdf27c0:s1 -> Node0xdf2e90;
	Node0xdf2dd0 [shape=record,label="{for.body:                                         \l  %i.0.reload8 = load i32* %i.0.reg2mem\l  %idxprom2 = sext i32 %i.0.reload8 to i64\l  %arrayidx3 = getelementptr inbounds i32* %a, i64 %idxprom2\l  %0 = load i32* %arrayidx3, align 4\l  %call.reload19 = load i32* %call.reg2mem\l  %idxprom4 = sext i32 %call.reload19 to i64\l  %arrayidx5 = getelementptr inbounds [512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 %idxprom4\l  %1 = load i32* %arrayidx5, align 4\l  %add = add nsw i32 %1, %0\l  store i32 %add, i32* %arrayidx5, align 4\l  br label %for.inc\l}"];
	Node0xdf2dd0 -> Node0xdf3650;
	Node0xdf3650 [shape=record,label="{for.inc:                                          \l  %i.0.reload = load i32* %i.0.reg2mem\l  %call1.reload11 = load i32* %call1.reg2mem\l  %add6 = add nsw i32 %i.0.reload, %call1.reload11\l  store i32 %add6, i32* %add6.reg2mem\l  %add6.reload = load i32* %add6.reg2mem\l  store i32 %add6.reload, i32* %i.0.reg2mem24\l  br label %for.cond\l}"];
	Node0xdf3650 -> Node0xdf27c0;
	Node0xdf2e90 [shape=record,label="{for.end:                                          \l  %call1.reload10 = load i32* %call1.reg2mem\l  %cmp7 = icmp eq i32 %call1.reload10, 1\l  br i1 %cmp7, label %if.then, label %if.end10\l|{<s0>T|<s1>F}}"];
	Node0xdf2e90:s0 -> Node0xdf3ce0;
	Node0xdf2e90:s1 -> Node0xdf3dc0;
	Node0xdf3ce0 [shape=record,label="{if.then:                                          \l  %call.reload18 = load i32* %call.reg2mem\l  %cmp8 = icmp eq i32 %call.reload18, 0\l  br i1 %cmp8, label %if.then9, label %if.then.if.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xdf3ce0:s0 -> Node0xdf4030;
	Node0xdf3ce0:s1 -> Node0xdf4100;
	Node0xdf4100 [shape=record,label="{if.then.if.end_crit_edge:                         \l  br label %if.end\l}"];
	Node0xdf4100 -> Node0xdf2ab0;
	Node0xdf4030 [shape=record,label="{if.then9:                                         \l  %2 = load i32* getelementptr inbounds ([512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 0), align 16\l  store i32 %2, i32* %sum, align 4\l  br label %if.end\l}"];
	Node0xdf4030 -> Node0xdf2ab0;
	Node0xdf2ab0 [shape=record,label="{if.end:                                           \l  br label %if.end35\l}"];
	Node0xdf2ab0 -> Node0xdf4a00;
	Node0xdf3dc0 [shape=record,label="{if.end10:                                         \l  %call1.reload = load i32* %call1.reg2mem\l  store i32 %call1.reload, i32* %lsize.0.reg2mem22\l  br label %do.body.mxpa.b4.barrier\l}"];
	Node0xdf3dc0 -> Node0xdf4c20;
	Node0xdf4c20 [shape=record,label="{do.body.mxpa.b4.barrier:                          \l  %lsize.0.reload23 = load i32* %lsize.0.reg2mem22\l  store i32 %lsize.0.reload23, i32* %lsize.0.reg2mem\l  br label %do.body\l}"];
	Node0xdf4c20 -> Node0xdf4e80;
	Node0xdf4e80 [shape=record,label="{do.body:                                          \l  call void @barrier(i32 1) #2\l  br label %do.body.mxpa.after.barrier\l}"];
	Node0xdf4e80 -> Node0xdf5030;
	Node0xdf5030 [shape=record,label="{do.body.mxpa.after.barrier:                       \l  %lsize.0.reload7 = load i32* %lsize.0.reg2mem\l  %div = sdiv i32 %lsize.0.reload7, 2\l  %call.reload17 = load i32* %call.reg2mem\l  %cmp11 = icmp slt i32 %call.reload17, %div\l  br i1 %cmp11, label %if.then12, label\l... %do.body.mxpa.after.barrier.if.end30_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xdf5030:s0 -> Node0xdf53e0;
	Node0xdf5030:s1 -> Node0xdf5510;
	Node0xdf5510 [shape=record,label="{do.body.mxpa.after.barrier.if.end30_crit_edge:    \l  br label %if.end30\l}"];
	Node0xdf5510 -> Node0xdf5670;
	Node0xdf53e0 [shape=record,label="{if.then12:                                        \l  %call.reload16 = load i32* %call.reg2mem\l  %idxprom14 = sext i32 %call.reload16 to i64\l  %arrayidx15 = getelementptr inbounds [512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 %idxprom14\l  %3 = load i32* %arrayidx15, align 4\l  store i32 %3, i32* %.reg2mem\l  %lsize.0.reload6 = load i32* %lsize.0.reg2mem\l  %and = and i32 %lsize.0.reload6, 1\l  %tobool = icmp eq i32 %and, 0\l  br i1 %tobool, label %if.then12.if.end22_crit_edge, label %land.lhs.true\l|{<s0>T|<s1>F}}"];
	Node0xdf53e0:s0 -> Node0xdf5d00;
	Node0xdf53e0:s1 -> Node0xdf5e20;
	Node0xdf5d00 [shape=record,label="{if.then12.if.end22_crit_edge:                     \l  %.reload1 = load i32* %.reg2mem\l  store i32 %.reload1, i32* %sum13.0.reg2mem\l  br label %if.end22\l}"];
	Node0xdf5d00 -> Node0xdf60e0;
	Node0xdf5e20 [shape=record,label="{land.lhs.true:                                    \l  %call.reload15 = load i32* %call.reg2mem\l  %cmp16 = icmp eq i32 %call.reload15, 0\l  br i1 %cmp16, label %if.then17, label %land.lhs.true.if.end22_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xdf5e20:s0 -> Node0xdf6330;
	Node0xdf5e20:s1 -> Node0xdf63c0;
	Node0xdf63c0 [shape=record,label="{land.lhs.true.if.end22_crit_edge:                 \l  %.reload = load i32* %.reg2mem\l  store i32 %.reload, i32* %sum13.0.reg2mem\l  br label %if.end22\l}"];
	Node0xdf63c0 -> Node0xdf60e0;
	Node0xdf6330 [shape=record,label="{if.then17:                                        \l  %lsize.0.reload5 = load i32* %lsize.0.reg2mem\l  %call.reload14 = load i32* %call.reg2mem\l  %add18 = add nsw i32 %call.reload14, %lsize.0.reload5\l  %sub = add nsw i32 %add18, -1\l  %idxprom19 = sext i32 %sub to i64\l  %arrayidx20 = getelementptr inbounds [512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 %idxprom19\l  %4 = load i32* %arrayidx20, align 4\l  %.reload2 = load i32* %.reg2mem\l  %add21 = add nsw i32 %.reload2, %4\l  store i32 %add21, i32* %add21.reg2mem\l  %add21.reload = load i32* %add21.reg2mem\l  store i32 %add21.reload, i32* %sum13.0.reg2mem\l  br label %if.end22\l}"];
	Node0xdf6330 -> Node0xdf60e0;
	Node0xdf60e0 [shape=record,label="{if.end22:                                         \l  %sum13.0.reload = load i32* %sum13.0.reg2mem\l  %lsize.0.reload4 = load i32* %lsize.0.reg2mem\l  %div23 = sdiv i32 %lsize.0.reload4, 2\l  %call.reload13 = load i32* %call.reg2mem\l  %add24 = add nsw i32 %call.reload13, %div23\l  %idxprom25 = sext i32 %add24 to i64\l  %arrayidx26 = getelementptr inbounds [512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 %idxprom25\l  %5 = load i32* %arrayidx26, align 4\l  %add27 = add nsw i32 %sum13.0.reload, %5\l  %call.reload12 = load i32* %call.reg2mem\l  %idxprom28 = sext i32 %call.reload12 to i64\l  %arrayidx29 = getelementptr inbounds [512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 %idxprom28\l  store i32 %add27, i32* %arrayidx29, align 4\l  br label %if.end30\l}"];
	Node0xdf60e0 -> Node0xdf5670;
	Node0xdf5670 [shape=record,label="{if.end30:                                         \l  br label %do.cond\l}"];
	Node0xdf5670 -> Node0xdf7870;
	Node0xdf7870 [shape=record,label="{do.cond:                                          \l  %lsize.0.reload3 = load i32* %lsize.0.reg2mem\l  %div31 = sdiv i32 %lsize.0.reload3, 2\l  store i32 %div31, i32* %div31.reg2mem\l  %lsize.0.reload = load i32* %lsize.0.reg2mem\l  %lsize.0.off = add i32 %lsize.0.reload, 1\l  %6 = icmp ugt i32 %lsize.0.off, 2\l  br i1 %6, label %do.cond.do.body.mxpa.b4.barrier_crit_edge, label %do.end\l|{<s0>T|<s1>F}}"];
	Node0xdf7870:s0 -> Node0xdf4350;
	Node0xdf7870:s1 -> Node0xdf4480;
	Node0xdf4350 [shape=record,label="{do.cond.do.body.mxpa.b4.barrier_crit_edge:        \l  %div31.reload = load i32* %div31.reg2mem\l  store i32 %div31.reload, i32* %lsize.0.reg2mem22\l  br label %do.body.mxpa.b4.barrier\l}"];
	Node0xdf4350 -> Node0xdf4c20;
	Node0xdf4480 [shape=record,label="{do.end:                                           \l  %call.reload = load i32* %call.reg2mem\l  %cmp33 = icmp eq i32 %call.reload, 0\l  br i1 %cmp33, label %if.then34, label %do.end.if.end35_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xdf4480:s0 -> Node0xdfafe0;
	Node0xdf4480:s1 -> Node0xdfb040;
	Node0xdfb040 [shape=record,label="{do.end.if.end35_crit_edge:                        \l  br label %if.end35\l}"];
	Node0xdfb040 -> Node0xdf4a00;
	Node0xdfafe0 [shape=record,label="{if.then34:                                        \l  %7 = load i32* getelementptr inbounds ([512 x i32]*\l... @compute_sum_with_localmem.tmp_sum, i64 0, i64 0), align 16\l  store i32 %7, i32* %sum, align 4\l  br label %if.end35\l}"];
	Node0xdfafe0 -> Node0xdf4a00;
	Node0xdf4a00 [shape=record,label="{if.end35:                                         \l  br label %exit.barrier.mxpa.b4.barrier\l}"];
	Node0xdf4a00 -> Node0xdfb420;
	Node0xdfb420 [shape=record,label="{exit.barrier.mxpa.b4.barrier:                     \l  br label %exit.barrier\l}"];
	Node0xdfb420 -> Node0xdfb500;
	Node0xdfb500 [shape=record,label="{exit.barrier:                                     \l  call void @barrier(i32 0)\l  ret void\l}"];
}
