digraph "CFG for 'b' function" {
	label="CFG for 'b' function";

	Node0xa35790 [shape=record,label="{entry.barrier:\l  %add7.reg2mem = alloca i32\l  %k.0.reg2mem = alloca i32\l  %j.0.reg2mem = alloca i32\l  %i.0.reg2mem = alloca i32\l  %call4.reg2mem = alloca i32\l  %call3.reg2mem = alloca i32\l  %call2.reg2mem = alloca i32\l  %call1.reg2mem = alloca i32\l  %call.reg2mem = alloca i32\l  %k.0.reg2mem9 = alloca i32\l  %j.0.reg2mem11 = alloca i32\l  %i.0.reg2mem13 = alloca i32\l  %\"reg2mem alloca point\" = bitcast i32 0 to i32\l  call void @barrier(i32 0)\l  br label %entry\l}"];
	Node0xa35790 -> Node0xa36c10;
	Node0xa36c10 [shape=record,label="{entry:                                            \l  %call = call i32 @get_local_size(i32 0) #2\l  store i32 %call, i32* %call.reg2mem\l  %call1 = call i32 @get_local_size(i32 1) #2\l  store i32 %call1, i32* %call1.reg2mem\l  %call.reload8 = load i32* %call.reg2mem\l  %cmp = icmp sgt i32 %call.reload8, 0\l  br i1 %cmp, label %if.then, label %entry.if.end.mxpa.b4.barrier_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xa36c10:s0 -> Node0xa37350;
	Node0xa36c10:s1 -> Node0xa37470;
	Node0xa37470 [shape=record,label="{entry.if.end.mxpa.b4.barrier_crit_edge:           \l  store i32 0, i32* %k.0.reg2mem9\l  store i32 0, i32* %j.0.reg2mem11\l  store i32 0, i32* %i.0.reg2mem13\l  br label %if.end.mxpa.b4.barrier\l}"];
	Node0xa37470 -> Node0xa37950;
	Node0xa37350 [shape=record,label="{if.then:                                          \l  %call2 = call i32 @get_local_id(i32 0) #2\l  store i32 %call2, i32* %call2.reg2mem\l  %call3 = call i32 @get_local_id(i32 1) #2\l  store i32 %call3, i32* %call3.reg2mem\l  %call4 = call i32 @get_local_id(i32 2) #2\l  store i32 %call4, i32* %call4.reg2mem\l  %call4.reload = load i32* %call4.reg2mem\l  %call3.reload = load i32* %call3.reg2mem\l  %call2.reload = load i32* %call2.reg2mem\l  store i32 %call4.reload, i32* %k.0.reg2mem9\l  store i32 %call3.reload, i32* %j.0.reg2mem11\l  store i32 %call2.reload, i32* %i.0.reg2mem13\l  br label %if.end.mxpa.b4.barrier\l}"];
	Node0xa37350 -> Node0xa37950;
	Node0xa37950 [shape=record,label="{if.end.mxpa.b4.barrier:                           \l  %i.0.reload14 = load i32* %i.0.reg2mem13\l  %j.0.reload12 = load i32* %j.0.reg2mem11\l  %k.0.reload10 = load i32* %k.0.reg2mem9\l  store i32 %i.0.reload14, i32* %i.0.reg2mem\l  store i32 %j.0.reload12, i32* %j.0.reg2mem\l  store i32 %k.0.reload10, i32* %k.0.reg2mem\l  br label %if.end\l}"];
	Node0xa37950 -> Node0xa38910;
	Node0xa38910 [shape=record,label="{if.end:                                           \l  call void @barrier(i32 0) #2\l  br label %if.end.mxpa.after.barrier\l}"];
	Node0xa38910 -> Node0xa38b40;
	Node0xa38b40 [shape=record,label="{if.end.mxpa.after.barrier:                        \l  %k.0.reload4 = load i32* %k.0.reg2mem\l  %call.reload7 = load i32* %call.reg2mem\l  %mul = mul nsw i32 %k.0.reload4, %call.reload7\l  %call1.reload = load i32* %call1.reg2mem\l  %mul5 = mul nsw i32 %mul, %call1.reload\l  %j.0.reload5 = load i32* %j.0.reg2mem\l  %call.reload = load i32* %call.reg2mem\l  %mul6 = mul nsw i32 %j.0.reload5, %call.reload\l  %add = add nsw i32 %mul5, %mul6\l  %i.0.reload6 = load i32* %i.0.reg2mem\l  %add7 = add nsw i32 %add, %i.0.reload6\l  store i32 %add7, i32* %add7.reg2mem\l  %add7.reload3 = load i32* %add7.reg2mem\l  %cmp8 = icmp slt i32 %add7.reload3, %n\l  br i1 %cmp8, label %if.then9, label\l... %if.end.mxpa.after.barrier.if.end14_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xa38b40:s0 -> Node0xa375c0;
	Node0xa38b40:s1 -> Node0xa376f0;
	Node0xa376f0 [shape=record,label="{if.end.mxpa.after.barrier.if.end14_crit_edge:     \l  br label %if.end14\l}"];
	Node0xa376f0 -> Node0xa39ba0;
	Node0xa375c0 [shape=record,label="{if.then9:                                         \l  %add7.reload2 = load i32* %add7.reg2mem\l  %idxprom = sext i32 %add7.reload2 to i64\l  %arrayidx = getelementptr inbounds i32* %A, i64 %idxprom\l  %i.0.reload = load i32* %i.0.reg2mem\l  store i32 %i.0.reload, i32* %arrayidx, align 4\l  %add7.reload1 = load i32* %add7.reg2mem\l  %idxprom10 = sext i32 %add7.reload1 to i64\l  %arrayidx11 = getelementptr inbounds i32* %B, i64 %idxprom10\l  %j.0.reload = load i32* %j.0.reg2mem\l  store i32 %j.0.reload, i32* %arrayidx11, align 4\l  %add7.reload = load i32* %add7.reg2mem\l  %idxprom12 = sext i32 %add7.reload to i64\l  %arrayidx13 = getelementptr inbounds i32* %C, i64 %idxprom12\l  %k.0.reload = load i32* %k.0.reg2mem\l  store i32 %k.0.reload, i32* %arrayidx13, align 4\l  br label %if.end14\l}"];
	Node0xa375c0 -> Node0xa39ba0;
	Node0xa39ba0 [shape=record,label="{if.end14:                                         \l  br label %exit.barrier.mxpa.b4.barrier\l}"];
	Node0xa39ba0 -> Node0xa3a6e0;
	Node0xa3a6e0 [shape=record,label="{exit.barrier.mxpa.b4.barrier:                     \l  br label %exit.barrier\l}"];
	Node0xa3a6e0 -> Node0xa3a800;
	Node0xa3a800 [shape=record,label="{exit.barrier:                                     \l  call void @barrier(i32 0)\l  ret void\l}"];
}
