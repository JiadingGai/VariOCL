digraph "CFG for 'bar_fence' function" {
	label="CFG for 'bar_fence' function";

	Node0xd75720 [shape=record,label="{entry.barrier:\l  %inc32.reg2mem = alloca i32\l  %add30.reg2mem = alloca i32\l  %i24.0.reg2mem = alloca i32\l  %final.0.reg2mem = alloca i32\l  %inc16.reg2mem = alloca i32\l  %add14.reg2mem = alloca i32\l  %i8.0.reg2mem = alloca i32\l  %tmp.0.reg2mem = alloca i32\l  %inc5.reg2mem = alloca i32\l  %add4.reg2mem = alloca i32\l  %inc.reg2mem = alloca i32\l  %i.0.reg2mem = alloca i32\l  %start.0.reg2mem = alloca i32\l  %sum.0.reg2mem = alloca i32\l  %add.reg2mem = alloca i32\l  %call2.reg2mem = alloca i32\l  %call1.reg2mem = alloca i32\l  %call.reg2mem = alloca i32\l  %i24.0.reg2mem14 = alloca i32\l  %final.0.reg2mem16 = alloca i32\l  %i8.0.reg2mem18 = alloca i32\l  %tmp.0.reg2mem20 = alloca i32\l  %i.0.reg2mem22 = alloca i32\l  %start.0.reg2mem24 = alloca i32\l  %sum.0.reg2mem26 = alloca i32\l  %\"reg2mem alloca point\" = bitcast i32 0 to i32\l  call void @barrier(i32 0)\l  br label %entry\l}"];
	Node0xd75720 -> Node0xd77650;
	Node0xd77650 [shape=record,label="{entry:                                            \l  %call = call i32 @get_group_id(i32 0) #2\l  store i32 %call, i32* %call.reg2mem\l  %call1 = call i32 @get_local_id(i32 0) #2\l  store i32 %call1, i32* %call1.reg2mem\l  %call2 = call i32 @get_local_size(i32 0) #2\l  store i32 %call2, i32* %call2.reg2mem\l  %call.reload13 = load i32* %call.reg2mem\l  %mul = mul nsw i32 %call.reload13, 10000\l  %call1.reload11 = load i32* %call1.reg2mem\l  %mul3 = mul nsw i32 %call1.reload11, 100\l  %add = add nsw i32 %mul, %mul3\l  store i32 %add, i32* %add.reg2mem\l  %add.reload = load i32* %add.reg2mem\l  store i32 0, i32* %i.0.reg2mem22\l  store i32 %add.reload, i32* %start.0.reg2mem24\l  store i32 0, i32* %sum.0.reg2mem26\l  br label %for.cond\l}"];
	Node0xd77650 -> Node0xd787a0;
	Node0xd787a0 [shape=record,label="{for.cond:                                         \l  %sum.0.reload27 = load i32* %sum.0.reg2mem26\l  %start.0.reload25 = load i32* %start.0.reg2mem24\l  %i.0.reload23 = load i32* %i.0.reg2mem22\l  store i32 %sum.0.reload27, i32* %sum.0.reg2mem\l  store i32 %start.0.reload25, i32* %start.0.reg2mem\l  store i32 %i.0.reload23, i32* %i.0.reg2mem\l  %i.0.reload7 = load i32* %i.0.reg2mem\l  %cmp = icmp slt i32 %i.0.reload7, 100\l  br i1 %cmp, label %for.body, label %for.end.mxpa.b4.barrier\l|{<s0>T|<s1>F}}"];
	Node0xd787a0:s0 -> Node0xd78e50;
	Node0xd787a0:s1 -> Node0xd78f10;
	Node0xd78e50 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0xd78e50 -> Node0xd79050;
	Node0xd79050 [shape=record,label="{for.inc:                                          \l  %start.0.reload8 = load i32* %start.0.reg2mem\l  %inc = add nsw i32 %start.0.reload8, 1\l  store i32 %inc, i32* %inc.reg2mem\l  %start.0.reload = load i32* %start.0.reg2mem\l  %sum.0.reload9 = load i32* %sum.0.reg2mem\l  %add4 = add nsw i32 %sum.0.reload9, %start.0.reload\l  store i32 %add4, i32* %add4.reg2mem\l  %i.0.reload = load i32* %i.0.reg2mem\l  %inc5 = add nsw i32 %i.0.reload, 1\l  store i32 %inc5, i32* %inc5.reg2mem\l  %inc5.reload = load i32* %inc5.reg2mem\l  %add4.reload = load i32* %add4.reg2mem\l  %inc.reload = load i32* %inc.reg2mem\l  store i32 %inc5.reload, i32* %i.0.reg2mem22\l  store i32 %inc.reload, i32* %start.0.reg2mem24\l  store i32 %add4.reload, i32* %sum.0.reg2mem26\l  br label %for.cond\l}"];
	Node0xd79050 -> Node0xd787a0;
	Node0xd78f10 [shape=record,label="{for.end.mxpa.b4.barrier:                          \l  %call1.reload10 = load i32* %call1.reg2mem\l  %idxprom = sext i32 %call1.reload10 to i64\l  %arrayidx = getelementptr inbounds i32* %sum_per_wi, i64 %idxprom\l  %sum.0.reload = load i32* %sum.0.reg2mem\l  store i32 %sum.0.reload, i32* %arrayidx, align 4\l  br label %for.end\l}"];
	Node0xd78f10 -> Node0xd7a250;
	Node0xd7a250 [shape=record,label="{for.end:                                          \l  call void @barrier(i32 0) #2\l  br label %for.end.mxpa.after.barrier\l}"];
	Node0xd7a250 -> Node0xd7a430;
	Node0xd7a430 [shape=record,label="{for.end.mxpa.after.barrier:                       \l  %call1.reload = load i32* %call1.reg2mem\l  %cmp6 = icmp eq i32 %call1.reload, 0\l  br i1 %cmp6, label %if.then, label\l... %for.end.mxpa.after.barrier.if.end.mxpa.b4.barrier_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xd7a430:s0 -> Node0xd7a690;
	Node0xd7a430:s1 -> Node0xd7a7d0;
	Node0xd7a7d0 [shape=record,label="{for.end.mxpa.after.barrier.if.end.mxpa.b4.barrier_crit_edge: \l  br label %if.end.mxpa.b4.barrier\l}"];
	Node0xd7a7d0 -> Node0xd7a710;
	Node0xd7a690 [shape=record,label="{if.then:                                          \l  store i32 0, i32* %i8.0.reg2mem18\l  store i32 0, i32* %tmp.0.reg2mem20\l  br label %for.cond9\l}"];
	Node0xd7a690 -> Node0xd7a770;
	Node0xd7a770 [shape=record,label="{for.cond9:                                        \l  %tmp.0.reload21 = load i32* %tmp.0.reg2mem20\l  %i8.0.reload19 = load i32* %i8.0.reg2mem18\l  store i32 %tmp.0.reload21, i32* %tmp.0.reg2mem\l  store i32 %i8.0.reload19, i32* %i8.0.reg2mem\l  %i8.0.reload5 = load i32* %i8.0.reg2mem\l  %call2.reload = load i32* %call2.reg2mem\l  %cmp10 = icmp slt i32 %i8.0.reload5, %call2.reload\l  br i1 %cmp10, label %for.body11, label %for.end17\l|{<s0>T|<s1>F}}"];
	Node0xd7a770:s0 -> Node0xd7b100;
	Node0xd7a770:s1 -> Node0xd7b1c0;
	Node0xd7b100 [shape=record,label="{for.body11:                                       \l  br label %for.inc15\l}"];
	Node0xd7b100 -> Node0xd7b300;
	Node0xd7b300 [shape=record,label="{for.inc15:                                        \l  %i8.0.reload4 = load i32* %i8.0.reg2mem\l  %idxprom12 = sext i32 %i8.0.reload4 to i64\l  %arrayidx13 = getelementptr inbounds i32* %sum_per_wi, i64 %idxprom12\l  %0 = load i32* %arrayidx13, align 4\l  %tmp.0.reload6 = load i32* %tmp.0.reg2mem\l  %add14 = add nsw i32 %tmp.0.reload6, %0\l  store i32 %add14, i32* %add14.reg2mem\l  %i8.0.reload = load i32* %i8.0.reg2mem\l  %inc16 = add nsw i32 %i8.0.reload, 1\l  store i32 %inc16, i32* %inc16.reg2mem\l  %inc16.reload = load i32* %inc16.reg2mem\l  %add14.reload = load i32* %add14.reg2mem\l  store i32 %inc16.reload, i32* %i8.0.reg2mem18\l  store i32 %add14.reload, i32* %tmp.0.reg2mem20\l  br label %for.cond9\l}"];
	Node0xd7b300 -> Node0xd7a770;
	Node0xd7b1c0 [shape=record,label="{for.end17:                                        \l  %call.reload12 = load i32* %call.reg2mem\l  %idxprom18 = sext i32 %call.reload12 to i64\l  %arrayidx19 = getelementptr inbounds i32* %sum_wg, i64 %idxprom18\l  %tmp.0.reload = load i32* %tmp.0.reg2mem\l  store i32 %tmp.0.reload, i32* %arrayidx19, align 4\l  br label %if.end.mxpa.b4.barrier\l}"];
	Node0xd7b1c0 -> Node0xd7a710;
	Node0xd7a710 [shape=record,label="{if.end.mxpa.b4.barrier:                           \l  br label %if.end\l}"];
	Node0xd7a710 -> Node0xd7c130;
	Node0xd7c130 [shape=record,label="{if.end:                                           \l  call void @barrier(i32 1) #2\l  br label %if.end.mxpa.after.barrier\l}"];
	Node0xd7c130 -> Node0xd7c360;
	Node0xd7c360 [shape=record,label="{if.end.mxpa.after.barrier:                        \l  %call.reload = load i32* %call.reg2mem\l  %cmp20 = icmp eq i32 %call.reload, 0\l  br i1 %cmp20, label %if.then21, label\l... %if.end.mxpa.after.barrier.if.end34_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0xd7c360:s0 -> Node0xd7c580;
	Node0xd7c360:s1 -> Node0xd7c6b0;
	Node0xd7c6b0 [shape=record,label="{if.end.mxpa.after.barrier.if.end34_crit_edge:     \l  br label %if.end34\l}"];
	Node0xd7c6b0 -> Node0xd7c810;
	Node0xd7c580 [shape=record,label="{if.then21:                                        \l  store i32 0, i32* %i24.0.reg2mem14\l  store i32 0, i32* %final.0.reg2mem16\l  br label %for.cond25\l}"];
	Node0xd7c580 -> Node0xd7ca40;
	Node0xd7ca40 [shape=record,label="{for.cond25:                                       \l  %final.0.reload17 = load i32* %final.0.reg2mem16\l  %i24.0.reload15 = load i32* %i24.0.reg2mem14\l  store i32 %final.0.reload17, i32* %final.0.reg2mem\l  store i32 %i24.0.reload15, i32* %i24.0.reg2mem\l  %i24.0.reload2 = load i32* %i24.0.reg2mem\l  %cmp26 = icmp slt i32 %i24.0.reload2, 1\l  br i1 %cmp26, label %for.body27, label %for.end33\l|{<s0>T|<s1>F}}"];
	Node0xd7ca40:s0 -> Node0xd794e0;
	Node0xd7ca40:s1 -> Node0xd795a0;
	Node0xd794e0 [shape=record,label="{for.body27:                                       \l  br label %for.inc31\l}"];
	Node0xd794e0 -> Node0xd7fe30;
	Node0xd7fe30 [shape=record,label="{for.inc31:                                        \l  %i24.0.reload1 = load i32* %i24.0.reg2mem\l  %idxprom28 = sext i32 %i24.0.reload1 to i64\l  %arrayidx29 = getelementptr inbounds i32* %sum_wg, i64 %idxprom28\l  %1 = load i32* %arrayidx29, align 4\l  %final.0.reload3 = load i32* %final.0.reg2mem\l  %add30 = add nsw i32 %final.0.reload3, %1\l  store i32 %add30, i32* %add30.reg2mem\l  %i24.0.reload = load i32* %i24.0.reg2mem\l  %inc32 = add nsw i32 %i24.0.reload, 1\l  store i32 %inc32, i32* %inc32.reg2mem\l  %inc32.reload = load i32* %inc32.reg2mem\l  %add30.reload = load i32* %add30.reg2mem\l  store i32 %inc32.reload, i32* %i24.0.reg2mem14\l  store i32 %add30.reload, i32* %final.0.reg2mem16\l  br label %for.cond25\l}"];
	Node0xd7fe30 -> Node0xd7ca40;
	Node0xd795a0 [shape=record,label="{for.end33:                                        \l  %final.0.reload = load i32* %final.0.reg2mem\l  store i32 %final.0.reload, i32* %Sum_final, align 4\l  br label %if.end34\l}"];
	Node0xd795a0 -> Node0xd7c810;
	Node0xd7c810 [shape=record,label="{if.end34:                                         \l  br label %exit.barrier.mxpa.b4.barrier\l}"];
	Node0xd7c810 -> Node0xd80a50;
	Node0xd80a50 [shape=record,label="{exit.barrier.mxpa.b4.barrier:                     \l  br label %exit.barrier\l}"];
	Node0xd80a50 -> Node0xd80b30;
	Node0xd80b30 [shape=record,label="{exit.barrier:                                     \l  call void @barrier(i32 0)\l  ret void\l}"];
}
